#include <WiFi.h>
#include <DHT.h>
#include <ArduinoJson.h>

#define DHTPIN 4
#define DHTTYPE DHT11
#define BUZZER_PIN 21
#define GAS_PIN 32
#define LED_PIN 18
#define PIR_PIN 5
#define LED_PIR_PIN 19

DHT dht(DHTPIN, DHTTYPE);

const char* ssid = "Tenda_FE8A10";
const char* password = "12345678***";

WiFiServer server(80);

// Variabel untuk menyimpan status pin dari kontrol manual
bool manualBuzzer = false;
bool manualLED = false;
bool manualLEDPIR = false;

void setup() {
  Serial.begin(115200);
  dht.begin();
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(LED_PIN, OUTPUT);
  pinMode(GAS_PIN, INPUT);
  pinMode(PIR_PIN, INPUT);
  pinMode(LED_PIR_PIN, OUTPUT);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
  server.begin();
}

void handleRequest(WiFiClient client) {
  String request = client.readStringUntil('\r');
  client.flush();

  Serial.println("Request: " + request);

  String response;
  if (request.indexOf("/status") != -1) {
    DynamicJsonDocument doc(1024);
    doc["temperature"] = dht.readTemperature();
    doc["gas"] = analogRead(GAS_PIN);
    doc["motion"] = digitalRead(PIR_PIN);
    doc["buzzer"] = manualBuzzer ? "ON" : (digitalRead(BUZZER_PIN) ? "ON" : "OFF");
    doc["led"] = manualLED ? "ON" : (digitalRead(LED_PIN) ? "ON" : "OFF");
    doc["led_pir"] = manualLEDPIR ? "ON" : (digitalRead(LED_PIR_PIN) ? "ON" : "OFF");

    String jsonString;
    serializeJson(doc, jsonString);
    response = "HTTP/1.1 200 OK\r\nContent-Type: application/json\r\nContent-Length: " + String(jsonString.length()) + "\r\n\r\n" + jsonString;
  } 
  else if (request.indexOf("/buzzer/on") != -1) {
    manualBuzzer = true;
    digitalWrite(BUZZER_PIN, HIGH);
    response = "HTTP/1.1 200 OK\r\n\r\nBuzzer ON";
  }
  else if (request.indexOf("/buzzer/off") != -1) {
    manualBuzzer = false;
    digitalWrite(BUZZER_PIN, LOW);
    response = "HTTP/1.1 200 OK\r\n\r\nBuzzer OFF";
  }
  else if (request.indexOf("/led/on") != -1) {
    manualLED = true;
    digitalWrite(LED_PIN, HIGH);
    response = "HTTP/1.1 200 OK\r\n\r\nLED ON";
  }
  else if (request.indexOf("/led/off") != -1) {
    manualLED = false;
    digitalWrite(LED_PIN, LOW);
    response = "HTTP/1.1 200 OK\r\n\r\nLED OFF";
  }
  else if (request.indexOf("/led_pir/on") != -1) {
    manualLEDPIR = true;
    digitalWrite(LED_PIR_PIN, HIGH);
    response = "HTTP/1.1 200 OK\r\n\r\nLED PIR ON";
  }
  else if (request.indexOf("/led_pir/off") != -1) {
    manualLEDPIR = false;
    digitalWrite(LED_PIR_PIN, LOW);
    response = "HTTP/1.1 200 OK\r\n\r\nLED PIR OFF";
  }
  else {
    response = "HTTP/1.1 404 Not Found\r\n\r\n";
  }

  client.print(response);
  delay(1);
  client.stop();
}

void loop() {
  WiFiClient client = server.available();
  if (client) {
    handleRequest(client);
  }

  // Otomatisasi berdasarkan sensor
  float temperature = dht.readTemperature();
  if (isnan(temperature)) {
    Serial.println("Gagal membaca dari sensor DHT");
    return;
  }

  Serial.print("Suhu: ");
  Serial.print(temperature);
  Serial.println(" *C");

  if (temperature > 33.0) {
    if (!manualBuzzer) {
      digitalWrite(BUZZER_PIN, HIGH); // Nyalakan buzzer jika tidak dikendalikan manual
    }
  } else {
    if (!manualBuzzer) {
      digitalWrite(BUZZER_PIN, LOW); // Matikan buzzer jika tidak dikendalikan manual
    }
  }

  int gasValue = analogRead(GAS_PIN);
  Serial.print("Nilai Gas: ");
  Serial.println(gasValue);

  if (gasValue > 850) {
    if (!manualLED) {
      digitalWrite(LED_PIN, HIGH); // Nyalakan LED utama jika tidak dikendalikan manual
    }
  } else {
    if (!manualLED) {
      digitalWrite(LED_PIN, LOW); // Matikan LED utama jika tidak dikendalikan manual
    }
  }

  if (digitalRead(PIR_PIN) == HIGH) {
    if (!manualLEDPIR) {
      digitalWrite(LED_PIR_PIN, HIGH); // Nyalakan LED PIR jika tidak dikendalikan manual
    }
    delay(500); // Tunda sebentar sebelum membaca ulang sensor PIR
  } else {
    if (!manualLEDPIR) {
      digitalWrite(LED_PIR_PIN, LOW); // Matikan LED PIR jika tidak dikendalikan manual
    }
  }
  
  delay(2000);  // Tunggu sebentar sebelum membaca ulang sensor
}
